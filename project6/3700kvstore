#!/usr/bin/env python3

import sys, socket, select, time, json, random


class RaftServer:
	def __init__(self, my_id, replica_ids):
		# Your ID number
		self.my_id = my_id

		# The ID numbers of all the other replicas
		self.replica_ids = replica_ids

		# Connect to the network. All messages to/from other replicas and clients will
		# occur over this socket
		self.sock = socket.socket(socket.AF_UNIX, socket.SOCK_SEQPACKET)
		self.sock.connect(my_id)

	def sendDict(self, msg):
		msgjson = json.dumps(msg)
		print(msgjson)
		self.sock.sendall(msgjson)

	def sendFailMsg(self, msg):
		fail = {"src": msg['dst'], "dst": msg['src'], "leader": self.LEADER_ID, "type": "fail", "MID": msg['MID']}
		self.sendDict(fail)

	last = 0


server = RaftServer(sys.argv[1], sys.argv[2:])

while True:
		ready = select.select([server.sock], [], [], 0.1)[0]

		if server.sock in ready:
				msg_raw = server.sock.recv(32768)

				if len(msg_raw) == 0: continue
				msg = json.loads(msg_raw)

				# For now, ignore get() and put() from clients
				if msg['type'] in ['get', 'put']:
						server.sendFailMsg(msg)